// generated by Fast Light User Interface Designer (fluid) version 1.0010

#ifndef svmUI_h
#define svmUI_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Button.H>
#include "svm.h"

class svmUI {
public:
  svmUI();
  Fl_Window *mainWindow;
  Fl_Output *mouseInfo;
  Fl_Menu_Bar *mainMenu;
  static Fl_Menu_Item menu_mainMenu[];
private:
  inline void cb_Open_i(Fl_Menu_*, void*);
  static void cb_Open(Fl_Menu_*, void*);
  inline void cb_Open1_i(Fl_Menu_*, void*);
  static void cb_Open1(Fl_Menu_*, void*);
  inline void cb_Save_i(Fl_Menu_*, void*);
  static void cb_Save(Fl_Menu_*, void*);
  inline void cb_Save1_i(Fl_Menu_*, void*);
  static void cb_Save1(Fl_Menu_*, void*);
  inline void cb_Save2_i(Fl_Menu_*, void*);
  static void cb_Save2(Fl_Menu_*, void*);
  inline void cb_Exit_i(Fl_Menu_*, void*);
  static void cb_Exit(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *editPoint;
private:
  inline void cb_editPoint_i(Fl_Menu_*, void*);
  static void cb_editPoint(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *editXLine;
private:
  inline void cb_editXLine_i(Fl_Menu_*, void*);
  static void cb_editXLine(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *editYLine;
private:
  inline void cb_editYLine_i(Fl_Menu_*, void*);
  static void cb_editYLine(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *editZLine;
private:
  inline void cb_editZLine_i(Fl_Menu_*, void*);
  static void cb_editZLine(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *editOLine;
private:
  inline void cb_editOLine_i(Fl_Menu_*, void*);
  static void cb_editOLine(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *editPly;
private:
  inline void cb_editPly_i(Fl_Menu_*, void*);
  static void cb_editPly(Fl_Menu_*, void*);
// public:
//   static Fl_Menu_Item *editYZRect;
// private:
//   inline void cb_editYZRect_i(Fl_Menu_*, void*);
//   static void cb_editYZRect(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *editXZRect;
private:
  inline void cb_editXZRect_i(Fl_Menu_*, void*);
  static void cb_editXZRect(Fl_Menu_*, void*);
//public:
//  static Fl_Menu_Item *editXYRect;
//private:
//  inline void cb_editXYRect_i(Fl_Menu_*, void*);
//  static void cb_editXYRect(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *editSweep;
private:
  inline void cb_editSweep_i(Fl_Menu_*, void*);
  static void cb_editSweep(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *drawPoint;
private:
  inline void cb_drawPoint_i(Fl_Menu_*, void*);
  static void cb_drawPoint(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *drawLine;
private:
  inline void cb_drawLine_i(Fl_Menu_*, void*);
  static void cb_drawLine(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *drawPly;
private:
  inline void cb_drawPly_i(Fl_Menu_*, void*);
  static void cb_drawPly(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *draw3D;
private:
  inline void cb_draw3D_i(Fl_Menu_*, void*);
  static void cb_draw3D(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *computeVps;
private:
  inline void cb_computeVps_i(Fl_Menu_*, void*);
  static void cb_computeVps(Fl_Menu_*, void*);
/*** added for winter 2003 begin ***/
public:
	static Fl_Menu_Item *computeHomography;
private:
	inline void cb_computeRefHomography_i(Fl_Menu_*, void*);
	static void cb_computeRefHomography(Fl_Menu_* o, void* v);
/*** added for winter 2003 end ***/
public:
  static Fl_Menu_Item *sameZPlane;
private:
  inline void cb_sameZPlane_i(Fl_Menu_*, void*);
  static void cb_sameZPlane(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *sameXY;
private:
  inline void cb_sameXY_i(Fl_Menu_*, void*);
  static void cb_sameXY(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *computeCamPos;
private:
  inline void cb_computeCamPos_i(Fl_Menu_*, void*);
  static void cb_computeCamPos(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *invertScene;
private:
  inline void cb_invertScene_i(Fl_Menu_*, void*);
  static void cb_invertScene(Fl_Menu_*, void*);
/*
public:
  static Fl_Menu_Item *samePlane;
private:
  inline void cb_samePlane_i(Fl_Menu_*, void*);
  static void cb_samePlane(Fl_Menu_*, void*);
*/
public:
  static Fl_Menu_Item *guideLines;
private:
  inline void cb_guideLines_i(Fl_Menu_*, void*);
  static void cb_guideLines(Fl_Menu_*, void*);
  inline void cb_About_i(Fl_Menu_*, void*);
  static void cb_About(Fl_Menu_*, void*);
public:
  ImgView *imgView;
  void show();
  void hide();
};
#endif
