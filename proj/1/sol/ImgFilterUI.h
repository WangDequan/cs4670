// generated by Fast Light User Interface Designer (fluid) version 1.0011

#ifndef ImgFilterUI_h
#define ImgFilterUI_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Menu_Bar.H>
#include "imgflt.h"

class ImgFilterUI {
public:
  ImgFilterUI();
  static Fl_Window *mainWindow; // static as hack, see ImgFilterUI.cpp
  static Fl_Output *mouseInfo; // static as hack, see ImgFilterUI.cpp
  static Fl_Menu_Bar *mainMenu; // static as hack, see ImgFilterUI.cpp
  static Fl_Menu_Item menu_mainMenu[];
private:
  inline void cb_Open_i(Fl_Menu_*, void*);
  static void cb_Open(Fl_Menu_*, void*);
  inline void cb_Save_i(Fl_Menu_*, void*);
  static void cb_Save(Fl_Menu_*, void*);
  inline void cb_Save1_i(Fl_Menu_*, void*);
  static void cb_Save1(Fl_Menu_*, void*);
  inline void cb_Exit_i(Fl_Menu_*, void*);
  static void cb_Exit(Fl_Menu_*, void*);
  inline void cb_Filter_i(Fl_Menu_*, void*);
  static void cb_Filter(Fl_Menu_*, void*);
  inline void cb_Brush_i(Fl_Menu_*, void*);
  static void cb_Brush(Fl_Menu_*, void*);
  inline void cb_Scissor_i(Fl_Menu_*, void*);
  static void cb_Scissor(Fl_Menu_*, void*);
  inline void cb_My_i(Fl_Menu_*, void*);
  static void cb_My(Fl_Menu_*, void*);
public:
  static ImgView *imgView; // static as hack, see ImgFilterUI.cpp
  void show();
  void hide();
};
#endif
