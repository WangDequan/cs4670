// generated by Fast Light User Interface Designer (fluid) version 1.0011

#ifndef FltDesignUI_h
#define FltDesignUI_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include "imgflt.h"
#include <FL/Fl_Group.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Round_Button.H>
#include <FL/Fl_Button.H>

class FltDesignUI {
public:
  FltDesignUI();
  Fl_Window *mainWindow;
  Fl_Group *kernel;
  Fl_Value_Input *ele0;
private:
  inline void cb_ele0_i(Fl_Value_Input*, void*);
  static void cb_ele0(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele1;
private:
  inline void cb_ele1_i(Fl_Value_Input*, void*);
  static void cb_ele1(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele2;
private:
  inline void cb_ele2_i(Fl_Value_Input*, void*);
  static void cb_ele2(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele3;
private:
  inline void cb_ele3_i(Fl_Value_Input*, void*);
  static void cb_ele3(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele4;
private:
  inline void cb_ele4_i(Fl_Value_Input*, void*);
  static void cb_ele4(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele5;
private:
  inline void cb_ele5_i(Fl_Value_Input*, void*);
  static void cb_ele5(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele6;
private:
  inline void cb_ele6_i(Fl_Value_Input*, void*);
  static void cb_ele6(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele7;
private:
  inline void cb_ele7_i(Fl_Value_Input*, void*);
  static void cb_ele7(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele8;
private:
  inline void cb_ele8_i(Fl_Value_Input*, void*);
  static void cb_ele8(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele9;
private:
  inline void cb_ele9_i(Fl_Value_Input*, void*);
  static void cb_ele9(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele10;
private:
  inline void cb_ele10_i(Fl_Value_Input*, void*);
  static void cb_ele10(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele11;
private:
  inline void cb_ele11_i(Fl_Value_Input*, void*);
  static void cb_ele11(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele12;
private:
  inline void cb_ele12_i(Fl_Value_Input*, void*);
  static void cb_ele12(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele13;
private:
  inline void cb_ele13_i(Fl_Value_Input*, void*);
  static void cb_ele13(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele14;
private:
  inline void cb_ele14_i(Fl_Value_Input*, void*);
  static void cb_ele14(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele15;
private:
  inline void cb_ele15_i(Fl_Value_Input*, void*);
  static void cb_ele15(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele16;
private:
  inline void cb_ele16_i(Fl_Value_Input*, void*);
  static void cb_ele16(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele17;
private:
  inline void cb_ele17_i(Fl_Value_Input*, void*);
  static void cb_ele17(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele18;
private:
  inline void cb_ele18_i(Fl_Value_Input*, void*);
  static void cb_ele18(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele19;
private:
  inline void cb_ele19_i(Fl_Value_Input*, void*);
  static void cb_ele19(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele20;
private:
  inline void cb_ele20_i(Fl_Value_Input*, void*);
  static void cb_ele20(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele21;
private:
  inline void cb_ele21_i(Fl_Value_Input*, void*);
  static void cb_ele21(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele22;
private:
  inline void cb_ele22_i(Fl_Value_Input*, void*);
  static void cb_ele22(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele23;
private:
  inline void cb_ele23_i(Fl_Value_Input*, void*);
  static void cb_ele23(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *ele24;
private:
  inline void cb_ele24_i(Fl_Value_Input*, void*);
  static void cb_ele24(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *scale;
private:
  inline void cb_scale_i(Fl_Value_Input*, void*);
  static void cb_scale(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *offset;
private:
  inline void cb_offset_i(Fl_Value_Input*, void*);
  static void cb_offset(Fl_Value_Input*, void*);
public:
  Fl_Round_Button *image;
  Fl_Round_Button *selection;
private:
  inline void cb_Load_i(Fl_Button*, void*);
  static void cb_Load(Fl_Button*, void*);
  inline void cb_Save_i(Fl_Button*, void*);
  static void cb_Save(Fl_Button*, void*);
  inline void cb_Preview_i(Fl_Button*, void*);
  static void cb_Preview(Fl_Button*, void*);
  inline void cb_Cancel_i(Fl_Button*, void*);
  static void cb_Cancel(Fl_Button*, void*);
  inline void cb_Accept_i(Fl_Button*, void*);
  static void cb_Accept(Fl_Button*, void*);
  inline void cb_Close_i(Fl_Button*, void*);
  static void cb_Close(Fl_Button*, void*);
public:
  void show();
  ImgView *imgView;
  void hide();
};
#endif
