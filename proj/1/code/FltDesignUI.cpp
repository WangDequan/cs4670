// generated by Fast Light User Interface Designer (fluid) version 1.0011

#include "FltDesignUI.h"

inline void FltDesignUI::cb_ele0_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele0(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele0_i(o, v);
}

inline void FltDesignUI::cb_ele1_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele1(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele1_i(o, v);
}

inline void FltDesignUI::cb_ele2_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele2(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele2_i(o, v);
}

inline void FltDesignUI::cb_ele3_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele3(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele3_i(o, v);
}

inline void FltDesignUI::cb_ele4_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele4(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele4_i(o, v);
}

inline void FltDesignUI::cb_ele5_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele5(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele5_i(o, v);
}

inline void FltDesignUI::cb_ele6_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele6(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele6_i(o, v);
}

inline void FltDesignUI::cb_ele7_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele7(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele7_i(o, v);
}

inline void FltDesignUI::cb_ele8_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele8(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele8_i(o, v);
}

inline void FltDesignUI::cb_ele9_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele9(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele9_i(o, v);
}

inline void FltDesignUI::cb_ele10_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele10(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele10_i(o, v);
}

inline void FltDesignUI::cb_ele11_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele11(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele11_i(o, v);
}

inline void FltDesignUI::cb_ele12_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele12(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele12_i(o, v);
}

inline void FltDesignUI::cb_ele13_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele13(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele13_i(o, v);
}

inline void FltDesignUI::cb_ele14_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele14(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele14_i(o, v);
}

inline void FltDesignUI::cb_ele15_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele15(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele15_i(o, v);
}

inline void FltDesignUI::cb_ele16_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele16(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele16_i(o, v);
}

inline void FltDesignUI::cb_ele17_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele17(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele17_i(o, v);
}

inline void FltDesignUI::cb_ele18_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele18(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele18_i(o, v);
}

inline void FltDesignUI::cb_ele19_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele19(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele19_i(o, v);
}

inline void FltDesignUI::cb_ele20_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele20(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele20_i(o, v);
}

inline void FltDesignUI::cb_ele21_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele21(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele21_i(o, v);
}

inline void FltDesignUI::cb_ele22_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele22(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele22_i(o, v);
}

inline void FltDesignUI::cb_ele23_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele23(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele23_i(o, v);
}

inline void FltDesignUI::cb_ele24_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_ele24(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->parent()->user_data()))->cb_ele24_i(o, v);
}

inline void FltDesignUI::cb_scale_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_scale(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->user_data()))->cb_scale_i(o, v);
}

inline void FltDesignUI::cb_offset_i(Fl_Value_Input*, void*)
{
    imgView->UpdateFilter();
}
void FltDesignUI::cb_offset(Fl_Value_Input* o, void* v)
{
    ((FltDesignUI*)(o->parent()->user_data()))->cb_offset_i(o, v);
}

inline void FltDesignUI::cb_Load_i(Fl_Button*, void*)
{
    imgView->LoadFilter();
}
void FltDesignUI::cb_Load(Fl_Button* o, void* v)
{
    ((FltDesignUI*)(o->parent()->user_data()))->cb_Load_i(o, v);
}

inline void FltDesignUI::cb_Save_i(Fl_Button*, void*)
{
    imgView->SaveFilter();
}
void FltDesignUI::cb_Save(Fl_Button* o, void* v)
{
    ((FltDesignUI*)(o->parent()->user_data()))->cb_Save_i(o, v);
}

inline void FltDesignUI::cb_Preview_i(Fl_Button*, void*)
{
    imgView->PreviewFilter();
}
void FltDesignUI::cb_Preview(Fl_Button* o, void* v)
{
    ((FltDesignUI*)(o->parent()->user_data()))->cb_Preview_i(o, v);
}

inline void FltDesignUI::cb_Cancel_i(Fl_Button*, void*)
{
    imgView->CancelFilter();
}
void FltDesignUI::cb_Cancel(Fl_Button* o, void* v)
{
    ((FltDesignUI*)(o->parent()->user_data()))->cb_Cancel_i(o, v);
}

inline void FltDesignUI::cb_Accept_i(Fl_Button*, void*)
{
    imgView->AcceptFilter();
}
void FltDesignUI::cb_Accept(Fl_Button* o, void* v)
{
    ((FltDesignUI*)(o->parent()->user_data()))->cb_Accept_i(o, v);
}

inline void FltDesignUI::cb_Close_i(Fl_Button*, void*)
{
    imgView->StopFilter();
}
void FltDesignUI::cb_Close(Fl_Button* o, void* v)
{
    ((FltDesignUI*)(o->parent()->user_data()))->cb_Close_i(o, v);
}

FltDesignUI::FltDesignUI()
{
    Fl_Window* w;
    {
        Fl_Window* o = mainWindow = new Fl_Window(439, 249, "Filter Design UI");
        w = o;
        o->user_data((void*)(this));
        {
            Fl_Group* o = kernel = new Fl_Group(0, 20, 272, 140, "Filter Kernel");
            o->box(FL_ENGRAVED_FRAME);
            o->when(FL_WHEN_CHANGED);
            {
                Fl_Value_Input* o = ele0 = new Fl_Value_Input(5, 26, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele0);
            }
            {
                Fl_Value_Input* o = ele1 = new Fl_Value_Input(58, 26, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele1);
            }
            {
                Fl_Value_Input* o = ele2 = new Fl_Value_Input(111, 26, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele2);
            }
            {
                Fl_Value_Input* o = ele3 = new Fl_Value_Input(164, 26, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele3);
            }
            {
                Fl_Value_Input* o = ele4 = new Fl_Value_Input(217, 26, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele4);
            }
            {
                Fl_Value_Input* o = ele5 = new Fl_Value_Input(5, 52, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele5);
            }
            {
                Fl_Value_Input* o = ele6 = new Fl_Value_Input(58, 52, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele6);
            }
            {
                Fl_Value_Input* o = ele7 = new Fl_Value_Input(111, 52, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele7);
            }
            {
                Fl_Value_Input* o = ele8 = new Fl_Value_Input(164, 52, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele8);
            }
            {
                Fl_Value_Input* o = ele9 = new Fl_Value_Input(217, 52, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele9);
            }
            {
                Fl_Value_Input* o = ele10 = new Fl_Value_Input(5, 78, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele10);
            }
            {
                Fl_Value_Input* o = ele11 = new Fl_Value_Input(58, 78, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele11);
            }
            {
                Fl_Value_Input* o = ele12 = new Fl_Value_Input(111, 78, 50, 25);
                o->maximum(255);
                o->value(1);
                o->callback((Fl_Callback*)cb_ele12);
            }
            {
                Fl_Value_Input* o = ele13 = new Fl_Value_Input(164, 78, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele13);
            }
            {
                Fl_Value_Input* o = ele14 = new Fl_Value_Input(217, 78, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele14);
            }
            {
                Fl_Value_Input* o = ele15 = new Fl_Value_Input(5, 104, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele15);
            }
            {
                Fl_Value_Input* o = ele16 = new Fl_Value_Input(58, 104, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele16);
            }
            {
                Fl_Value_Input* o = ele17 = new Fl_Value_Input(111, 104, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele17);
            }
            {
                Fl_Value_Input* o = ele18 = new Fl_Value_Input(164, 104, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele18);
            }
            {
                Fl_Value_Input* o = ele19 = new Fl_Value_Input(217, 104, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele19);
            }
            {
                Fl_Value_Input* o = ele20 = new Fl_Value_Input(5, 130, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele20);
            }
            {
                Fl_Value_Input* o = ele21 = new Fl_Value_Input(58, 130, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele21);
            }
            {
                Fl_Value_Input* o = ele22 = new Fl_Value_Input(111, 130, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele22);
            }
            {
                Fl_Value_Input* o = ele23 = new Fl_Value_Input(164, 130, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele23);
            }
            {
                Fl_Value_Input* o = ele24 = new Fl_Value_Input(217, 130, 50, 25);
                o->maximum(255);
                o->callback((Fl_Callback*)cb_ele24);
            }
            o->end();
        }
        {
            Fl_Value_Input* o = scale = new Fl_Value_Input(112, 163, 154, 25, "Divide by::");
            o->maximum(255);
            o->value(1);
            o->callback((Fl_Callback*)cb_scale);
        }
        {
            Fl_Value_Input* o = offset = new Fl_Value_Input(112, 191, 154, 25, "Offset:");
            o->maximum(255);
            o->callback((Fl_Callback*)cb_offset);
        }
        {
            Fl_Group* o = new Fl_Group(280, 20, 160, 64, "Filter Range");
            o->box(FL_ENGRAVED_FRAME);
            {
                Fl_Round_Button* o = image = new Fl_Round_Button(284, 27, 68, 28, "Whole Image");
                o->type(102);
                o->down_box(FL_ROUND_DOWN_BOX);
            }
            {
                Fl_Round_Button* o = selection = new Fl_Round_Button(284, 51, 68, 28, "Brush Selection");
                o->type(102);
                o->down_box(FL_ROUND_DOWN_BOX);
            }
            o->end();
        }
        {
            Fl_Button* o = new Fl_Button(4, 224, 124, 24, "Load");
            o->callback((Fl_Callback*)cb_Load);
        }
        {
            Fl_Button* o = new Fl_Button(144, 224, 124, 24, "Save");
            o->callback((Fl_Callback*)cb_Save);
        }
        {
            Fl_Button* o = new Fl_Button(280, 125, 156, 24, "Preview");
            o->callback((Fl_Callback*)cb_Preview);
        }
        {
            Fl_Button* o = new Fl_Button(280, 159, 156, 24, "Cancel");
            o->callback((Fl_Callback*)cb_Cancel);
        }
        {
            Fl_Button* o = new Fl_Button(280, 192, 156, 24, "Accept");
            o->callback((Fl_Callback*)cb_Accept);
        }
        {
            Fl_Button* o = new Fl_Button(280, 224, 156, 24, "Close");
            o->callback((Fl_Callback*)cb_Close);
        }
        o->end();
    }
}

void FltDesignUI::show()
{
    mainWindow->show();
}

void FltDesignUI::hide()
{
    mainWindow->hide();
}
